<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/schema/mybatis-3-mapper.dtd">
<mapper namespace="com.zzz.dao.LevelDao">

    <select id="getTeamByParam" resultType="com.zzz.model.levels.Team">
        select * from struc_team where 1 = 1
        <if test="teamId!=null">
            and team_id = #{teamId}
        </if>
        <if test="teamName!=null and teamName!=''">
            and team_name rlike #{teamName}
        </if>
        <if test="employeeId!=null">
            and employee_id = #{employeeId}
        </if>
        limit #{offset}, #{limit}
    </select>
    <select id="getTeamNumWithParam" resultType="java.lang.Integer">
        select count(*) from struc_team where 1 = 1
        <if test="teamId!=null">
            and team_id = #{teamId}
        </if>
        <if test="teamName!=null and teamName!=''">
            and team_name rlike #{teamName}
        </if>
        <if test="employeeId!=null">
            and employee_id = #{employeeId}
        </if>
    </select>

    <select id="getGroupByParam" resultType="com.zzz.model.levels.Group">
        select * from struc_group where 1 = 1
        <if test="groupId!=null">
            and group_id = #{groupId}
        </if>
        <if test="groupName!=null and groupName!=''">
            and group_name rlike #{groupName}
        </if>
        <if test="employeeId!=null">
            and employee_id = #{employeeId}
        </if>
        limit #{offset}, #{limit}
    </select>
    <select id="getGroupNumWithParam" resultType="java.lang.Integer">
        select count(*) from struc_group where 1 = 1
        <if test="groupId!=null">
            and group_id = #{groupId}
        </if>
        <if test="groupName!=null and groupName!=''">
            and group_name rlike #{groupName}
        </if>
        <if test="employeeId!=null">
            and employee_id = #{employeeId}
        </if>
    </select>

    <select id="getBranchByParam" resultType="com.zzz.model.levels.Branch">
        select * from struc_branch where 1 = 1
        <if test="branchId!=null">
            and branch_id = #{branchId}
        </if>
        <if test="branchName!=null and branchName!=''">
            and branch_name rlike #{branchName}
        </if>
        <if test="employeeId!=null">
            and employee_id = #{employeeId}
        </if>
        limit #{offset}, #{limit}
    </select>
    <select id="getBranchNumWithParam" resultType="java.lang.Integer">
        select count(*) from struc_branch where 1 = 1
        <if test="branchId!=null">
            and branch_id = #{branchId}
        </if>
        <if test="branchName!=null and branchName!=''">
            and branch_name rlike #{branchName}
        </if>
        <if test="employeeId!=null">
            and employee_id = #{employeeId}
        </if>
    </select>

    <select id="getTotal" resultType="com.zzz.model.levels.Total">
        select * from struc_total
    </select>
    <select id="getTeamIds" resultType="java.lang.Integer">
        select team_id from struc_manage group by team_id
    </select>
    <select id="getGroupIds" resultType="java.lang.Integer">
        select group_id from struc_manage group by group_id
    </select>
    <select id="getBranchIds" resultType="java.lang.Integer">
        select branch_id from struc_manage group by branch_id
    </select>

    <select id="getLevelIdByEmployeeId" resultType="java.lang.Integer">
        select ${levelIdName} from ${tableName} where employee_id = #{employeeId}
    </select>

    <select id="getTeamsByUser" resultType="com.zzz.model.levels.Team">
        select * from struc_team where team_id in (select team_id from struc_manage where ${levelIdName} = #{levelId}) limit #{offset}, #{limit}
    </select>
    <select id="getGroupsByUser" resultType="com.zzz.model.levels.Group">
        select * from struc_group where group_id in (select group_id from struc_manage where ${levelIdName} = #{levelId}) limit #{offset}, #{limit}
    </select>
    <select id="getBranchsByUser" resultType="com.zzz.model.levels.Branch">
        select * from struc_branch where branch_id in (select branch_id from struc_manage where ${levelIdName} = #{levelId}) limit #{offset}, #{limit}
    </select>
    <select id="countTeam" resultType="java.lang.Integer">
        select count(*) from struc_team where team_id in (select team_id from struc_manage where ${levelIdName} = #{levelId})
    </select>
    <select id="countGroup" resultType="java.lang.Integer">
        select count(*) from struc_group where group_id in (select group_id from struc_manage where ${levelIdName} = #{levelId})
    </select>
    <select id="countBranch" resultType="java.lang.Integer">
        select count(*) from struc_branch where branch_id in (select branch_id from struc_manage where ${levelIdName} = #{levelId})
    </select>
    <select id="getAnchorsByUser" resultType="com.zzz.model.Anchor">
        select * from anchor where anchor_id in (select anchor_id from struc_manage where ${levelIdName} = #{levelId}) limit #{offset}, #{limit}
    </select>
    <select id="countAnchor" resultType="java.lang.Integer">
        select count(*) from anchor where anchor_id in (select anchor_id from struc_manage where ${levelIdName} = #{levelId})
    </select>


</mapper>